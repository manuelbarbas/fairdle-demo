// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import {Script, console} from "forge-std/Script.sol";
import {FairdleManager} from "../src/FairdleManager.sol";

contract FairdleManagerScript is Script {
    function setUp() public {}

    function run() public {
       // uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");
        vm.startBroadcast();

        // Constructor parameters
        address tokenAddress = 0x1e387D15641Bc64C62DA6D2a513e884a04ed2372;
        
        // Word list as bytes32 array
        bytes32[] memory wordList = new bytes32[](33);
        wordList[0] = 0x4641495200000000000000000000000000000000000000000000000000000000;
        wordList[1] = 0x4249544500000000000000000000000000000000000000000000000000000000;
        wordList[2] = 0x4d45560000000000000000000000000000000000000000000000000000000000;
        wordList[3] = 0x4554480000000000000000000000000000000000000000000000000000000000;
        wordList[4] = 0x4445580000000000000000000000000000000000000000000000000000000000;
        wordList[5] = 0x434c4f4200000000000000000000000000000000000000000000000000000000;
        wordList[6] = 0x5452555354000000000000000000000000000000000000000000000000000000;
        wordList[7] = 0x5354414b45000000000000000000000000000000000000000000000000000000;
        wordList[8] = 0x4c41594552000000000000000000000000000000000000000000000000000000;
        wordList[9] = 0x4d494e4552000000000000000000000000000000000000000000000000000000;
        wordList[10] = 0x4b4559534e000000000000000000000000000000000000000000000000000000;
        wordList[11] = 0x50524f4f46000000000000000000000000000000000000000000000000000000;
        wordList[12] = 0x5452414445000000000000000000000000000000000000000000000000000000;
        wordList[13] = 0x53454e4445520000000000000000000000000000000000000000000000000000;
        wordList[14] = 0x454e434f44450000000000000000000000000000000000000000000000000000;
        wordList[15] = 0x4445434f44450000000000000000000000000000000000000000000000000000;
        wordList[16] = 0x4c41594552310000000000000000000000000000000000000000000000000000;
        wordList[17] = 0x4c4f4f4b55500000000000000000000000000000000000000000000000000000;
        wordList[18] = 0x4147454e54530000000000000000000000000000000000000000000000000000;
        wordList[19] = 0x5155455545440000000000000000000000000000000000000000000000000000;
        wordList[20] = 0x4445435259505400000000000000000000000000000000000000000000000000;
        wordList[21] = 0x53414e4457494348000000000000000000000000000000000000000000000000;
        wordList[22] = 0x46524f4e5452554e000000000000000000000000000000000000000000000000;
        wordList[23] = 0x534e495045525300000000000000000000000000000000000000000000000000;
        wordList[24] = 0x4d41534b494e4700000000000000000000000000000000000000000000000000;
        wordList[25] = 0x4d454d504f4f4c00000000000000000000000000000000000000000000000000;
        wordList[26] = 0x4841434b494e4700000000000000000000000000000000000000000000000000;
        wordList[27] = 0x544f4b454e000000000000000000000000000000000000000000000000000000;
        wordList[28] = 0x534554544c454d454e5400000000000000000000000000000000000000000000;
        wordList[29] = 0x434f4e53454e5355530000000000000000000000000000000000000000000000;
        wordList[30] = 0x524553495354414e434500000000000000000000000000000000000000000000;
        wordList[31] = 0x5448524553484f4c440000000000000000000000000000000000000000000000;
        wordList[32] = 0x494e5354414e5400000000000000000000000000000000000000000000000000;
        
        uint256 maxGuessesPerGame = 6;

        // Deploy the FairdleManager contract
        FairdleManager fairdleManager = new FairdleManager(
            tokenAddress,
            wordList,
            maxGuessesPerGame
        );

        console.log("FairdleManager deployed to:", address(fairdleManager));
        console.log("Token address:", tokenAddress);
        console.log("Max guesses per game:", maxGuessesPerGame);
        console.log("Word list length:", wordList.length);

        vm.stopBroadcast();
    }
}